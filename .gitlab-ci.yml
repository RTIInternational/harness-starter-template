stages:
  - build
  - lint
  - test
  # - deploy
  - cleanup

build-app:
  tags: [docker-shell]
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab.rtp.rti.org:5005
    - docker build ./ -t harness-starter-template-ci --no-cache --rm
    - docker run -d -t  --name harness-starter-template-ci harness-starter-template-ci:latest /bin/sh

# build-server:
#   tags: [docker-shell]
#   only: [master]
#   stage: build
#   script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab.rtp.rti.org:5005
#     - docker build ./ -t gitlab.rtp.rti.org:5005/cds/YOUR_REPOSITORY_NAME -f Dockerfile-server --rm
#     - docker push gitlab.rtp.rti.org:5005/cds/YOUR_REPOSITORY_NAME

lint-app:
  tags: [docker-shell]
  stage: lint
  script:
    - docker exec -t harness-starter-template-ci yarn run lint --no-fix --max-warnings 0

test-app:
  tags: [docker-shell]
  stage: test
  script:
    - docker exec -t harness-starter-template-ci yarn run test:unit

# deploy-app-s3:
#   stage: deploy
#   tags: [docker-shell]
#   only: [master]
#   script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab.rtp.rti.org:5005
#     - docker exec -t harness-starter-template-ci aws configure set region us-east-1
#     - docker exec -t harness-starter-template-ci aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
#     - docker exec -t harness-starter-template-ci aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
#     - docker exec -t harness-starter-template-ci aws s3 rm s3://S3_BUCKET_NAME --recursive
#     - docker exec -t harness-starter-template-ci aws s3 sync /harness-starter-template/dist s3://S3_BUCKET_NAME

# deploy-server-sif:
#   stage: deploy
#   tags: [docker-shell]
#   only: [master]
#   script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab.rtp.rti.org:5005
#     - docker kill YOUR_REPOSITORY_NAME || true
#     - docker container rm YOUR_REPOSITORY_NAME || true
#     - docker image rm -f gitlab.rtp.rti.org:5005/cds/YOUR_REPOSITORY_NAME || true
#     - docker image pull gitlab.rtp.rti.org:5005/cds/YOUR_REPOSITORY_NAME
#     - docker run -d -p PORT_TO_USE:80 --name YOUR_REPOSITORY_NAME gitlab.rtp.rti.org:5005/cds/YOUR_REPOSITORY_NAME

cleanup-app:
  tags: [docker-shell]
  stage: cleanup
  script:
    - docker kill harness-starter-template-ci
    - docker container rm -f harness-starter-template-ci
    - docker image rm -f harness-starter-template-ci
  when: always
  
# cleanup-server:
#   tags: [docker-shell]
#   stage: cleanup
#   script:
#     - docker image rm -f gitlab.rtp.rti.org:5005/cds/harness-starter-template
